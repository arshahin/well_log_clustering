%%  QC
% make sure to omit all nulls 
% make sure to omit all outliers
% make sure to standardize/normalize the data
% QC data extensively before clustering 

%% Cleaning 
close all
clc
clear

%% Remove outliers including basic(1) and advanced (2)
% % rmoutl_mode=2;
%% Transformation including Standardization (1), normalization(2), and both(3)
execute_mode=1; %%% 
%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: .\data.csv
%
% Auto-generated by MATLAB 

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 7);

% Specify range and delimiter
opts.DataLines = [2, Inf];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["Depth", "DT", "RHOB", "NPHI", "PEF", "SGR", "RT"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
wlog1= readtable(".\data.csv", opts);

%% Clear temporary variables
clear opts

%% Plotting Setup
lw=2;
fs=14;
mksz=14;

%% Assignment
wlog2=table2array(wlog1);
nr=size(wlog2,1);
nc=size(wlog2,2);
DEPTH=wlog2(:,1);
DT=wlog2(:,2);
RHOB=wlog2(:,3);
NPHI=wlog2(:,4);
PEF=wlog2(:,5);
GR=wlog2(:,6);
RT=wlog2(:,7);

%% QC Plotting Histograms 
figure(1)
subplot (2,3,1)
histogram(DT)
xlabel('DT','FontSize',fs);
ylabel('Frequency','FontSize',fs);
grid
set(gca,'Fontsize',fs)
subplot (2,3,2)
histogram(PEF)
xlabel('PEF','FontSize',fs);
grid
set(gca,'Fontsize',fs)
subplot (2,3,3)
histogram(NPHI)
xlabel('NPHI','FontSize',fs);
grid
set(gca,'Fontsize',fs)
subplot (2,3,4)
histogram(RHOB)
xlabel('RHOB','FontSize',fs);
ylabel('Frequency','FontSize',fs);
grid
set(gca,'Fontsize',fs)
subplot (2,3,5)
histogram(GR)
xlabel('SGR','FontSize',fs);
grid
set(gca,'Fontsize',fs)
subplot (2,3,6)
histogram(RT)
xlabel('RT','FontSize',fs);
grid
set(gca,'Fontsize',fs)

%%
figure(2)
subplot(1,6,1)
plot(GR,DEPTH,'.b','LineWidth',lw)
xlabel('(API)','FontSize',fs)
ylabel('Depth(m)','FontSize',fs)
title('GR','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)       
subplot(1,6,3)
plot(RHOB,DEPTH,'.b','LineWidth',lw)
xlabel('(gr/cc)','FontSize',fs)
title('RHOB','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,2)
plot(RT,DEPTH,'.b','LineWidth',lw)
xlabel('(Omh-m)','FontSize',fs)
title('RT','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,4)
plot(NPHI,DEPTH,'.b','LineWidth',lw)
xlabel('(v/v)','FontSize',fs)
title('NPHI','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,5)
plot(DT,DEPTH,'.b','LineWidth',lw)
xlabel('(msec/ft)','FontSize',fs)
title('DT','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,6)
plot(PEF,DEPTH,'.b','LineWidth',lw)
xlabel('(b/e)','FontSize',fs)
title('PEF','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  

%% Remove rows with null values and some OUTLIERS
nully=-100;

wlog3=zeros(size(wlog2));
for jr=1:nr
    if (DT(jr)<0 || DT(jr)>100|| ...
        NPHI(jr)<-0.1 || NPHI(jr)>0.45 ||...
        RHOB(jr)<2.0 || RHOB(jr)>3.0 ||...
        PEF(jr)<0.0 || PEF(jr)>7.0 ||...
        RT(jr)<0.0 || RT(jr)>2000 ||...
        GR(jr)<0 || GR(jr)>150)
        wlog3(jr,2:nc)=nully;
        wlog3(jr,1)=wlog2(jr,1);
    else
       wlog3(jr,:)=wlog2(jr,:); 
    end
end

wlog=wlog2(1,:);
for jr=2:nr
    if wlog3(jr,2)~=nully
        wlog=[wlog;wlog2(jr,:)];
    end   
end

DEPTH=wlog(:,1);
DT=wlog(:,2);
RHOB=wlog(:,3);
NPHI=wlog(:,4);
PEF=wlog(:,5);
GR=wlog(:,6);
RT=wlog(:,7);

%% Set the limits for plotting 
DEPTHlim=[2800 4200];
GRlim=[0 200];
RTlim=[0 2000];
RHOBlim=[1.5 3.0];
NPHIlim=[-0.1 1];
DTlim=[0 150];
PEFlim=[0 10];

%% Plotting after removing null values   
%% QC Plotting Histograms 
figure(3)
subplot (2,3,1)
histogram(DT)
xlim(DTlim);
xlabel('DT','FontSize',fs);
ylabel('Frequency','FontSize',fs);
grid
set(gca,'Fontsize',fs)
subplot (2,3,2)
histogram(PEF)
xlim(PEFlim);
xlabel('PEF','FontSize',fs);
grid
set(gca,'Fontsize',fs)
subplot (2,3,3)
histogram(NPHI)
xlim(NPHIlim);
xlabel('NPHI','FontSize',fs);
grid
set(gca,'Fontsize',fs)
subplot (2,3,4)
histogram(RHOB)
xlim(RHOBlim);
xlabel('RHOB','FontSize',fs);
ylabel('Frequency','FontSize',fs);
grid
set(gca,'Fontsize',fs)
subplot (2,3,5)
histogram(GR)
xlim(GRlim);
xlabel('SGR','FontSize',fs);
grid
set(gca,'Fontsize',fs)
subplot (2,3,6)
histogram(RT)
xlim(RTlim);
xlabel('RT','FontSize',fs);
grid
set(gca,'Fontsize',fs)
%%
figure(4)
subplot(1,6,1)
plot(GR,DEPTH,'.b','LineWidth',lw)
ylim(DEPTHlim);
xlim(GRlim);
xlabel('(API)','FontSize',fs)
ylabel('Depth(m)','FontSize',fs)
title('GR','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)       
subplot(1,6,3)
plot(RHOB,DEPTH,'.b','LineWidth',lw)
ylim(DEPTHlim);
xlim(RHOBlim);
xlabel('(gr/cc)','FontSize',fs)
title('RHOB','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,2)
plot(RT,DEPTH,'.b','LineWidth',lw)
ylim(DEPTHlim);
xlim(RTlim);
xlabel('(Omh-m)','FontSize',fs)
title('RT','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,4)
plot(NPHI,DEPTH,'.b','LineWidth',lw)
ylim(DEPTHlim);
xlim(NPHIlim);
xlabel('(v/v)','FontSize',fs)
title('NPHI','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,5)
plot(DT,DEPTH,'.b','LineWidth',lw)
ylim(DEPTHlim);
xlim(DTlim);
xlabel('(msec/ft)','FontSize',fs)
title('DT','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,6)
plot(PEF,DEPTH,'.b','LineWidth',lw)
ylim(DEPTHlim);
xlim(PEFlim);
xlabel('(b/e)','FontSize',fs)
title('PEF','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  

%% Scatter plots after null removal
% Color plotted with GR
mksz1=7;
figure(5)
subplot (2,3,1)
scatter(PEF,GR,mksz1,GR,'filled')
grid on
cmin=0.0; cmax=max(GR);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('PEF','FontSize',fs);
ylabel('GR','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,2)
scatter(PEF,RHOB,mksz1,GR,'filled')
grid on
cmin=0.0; cmax=max(GR);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('PEF','FontSize',fs);
title('Colored with GR','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,3)
scatter(PEF,DT,mksz1,GR,'filled')
grid on
cmin=0.0; cmax=max(GR);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('PEF','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,4)
scatter(DT,RHOB,mksz1,GR,'filled')
grid on
cmin=0.0; cmax=max(GR);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('DT','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,5)
scatter(NPHI,RHOB,mksz1,GR,'filled')
grid on
cmin=0.0; cmax=max(GR);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('NPHI','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,6)
scatter(NPHI,DT,mksz1,GR,'filled')
grid on
cmin=0.0; cmax=max(GR);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('NPHI','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)

%% Color plotted with PEF
mksz1=7;
figure(6)
subplot (2,3,1)
scatter(PEF,GR,mksz1,PEF,'filled')
grid on
cmin=0.0; cmax=max(PEF);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('PEF','FontSize',fs);
ylabel('GR','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,2)
scatter(PEF,RHOB,mksz1,PEF,'filled')
grid on
cmin=0.0; cmax=max(PEF);colorbar; colormap(jet);caxis([cmin cmax])
title('Colored with PEF','FontSize',fs);
xlabel('PEF','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,3)
scatter(PEF,DT,mksz1,PEF,'filled')
grid on
cmin=0.0; cmax=max(PEF);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('PEF','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,4)
scatter(DT,RHOB,mksz1,PEF,'filled')
grid on
cmin=0.0; cmax=max(PEF);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('DT','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,5)
scatter(NPHI,RHOB,mksz1,PEF,'filled')
grid on
cmin=0.0; cmax=max(PEF);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('NPHI','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,6)
scatter(NPHI,DT,mksz1,PEF,'filled')
grid on
cmin=0.0; cmax=max(PEF);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('NPHI','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)

%% Color plotted with DT
mksz1=7;
figure(7)
subplot (2,3,1)
scatter(PEF,GR,mksz1,DT,'filled')
grid on
cmin=0.0; cmax=max(DT);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('PEF','FontSize',fs);
ylabel('GR','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,2)
scatter(PEF,RHOB,mksz1,DT,'filled')
grid on
cmin=0.0; cmax=max(DT);colorbar; colormap(jet);caxis([cmin cmax])
title('Colored with DT','FontSize',fs);
xlabel('PEF','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,3)
scatter(PEF,DT,mksz1,DT,'filled')
grid on
cmin=0.0; cmax=max(DT);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('PEF','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,4)
scatter(DT,RHOB,mksz1,DT,'filled')
grid on
cmin=0.0; cmax=max(DT);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('DT','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,5)
scatter(NPHI,RHOB,mksz1,DT,'filled')
grid on
cmin=0.0; cmax=max(DT);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('NPHI','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,6)
scatter(NPHI,DT,mksz1,DT,'filled')
grid on
cmin=0.0; cmax=max(DT);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('NPHI','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)

%% Color plotted with RHOB
mksz1=7;
figure(8)
subplot (2,3,1)
scatter(PEF,GR,mksz1,RHOB,'filled')
grid on
cmin=2.0; cmax=max(RHOB);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('PEF','FontSize',fs);
ylabel('GR','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,2)
scatter(PEF,RHOB,mksz1,RHOB,'filled')
grid on
cmin=2.0; cmax=max(RHOB);colorbar; colormap(jet);caxis([cmin cmax])
title('Colored with RHOB','FontSize',fs);
xlabel('PEF','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,3)
scatter(PEF,DT,mksz1,RHOB,'filled')
grid on
cmin=2.0; cmax=max(RHOB);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('PEF','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,4)
scatter(DT,RHOB,mksz1,RHOB,'filled')
grid on
cmin=2.0; cmax=max(RHOB);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('DT','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,5)
scatter(NPHI,RHOB,mksz1,RHOB,'filled')
grid on
cmin=2.0; cmax=max(RHOB);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('NPHI','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,6)
scatter(NPHI,DT,mksz1,RHOB,'filled')
grid on
cmin=2.0; cmax=max(RHOB);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('NPHI','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)

%% Color plotted with RHOB
mksz1=7;
figure(9)
subplot (2,3,1)
scatter(PEF,GR,mksz1,NPHI,'filled')
grid on
cmin=0.0; cmax=max(NPHI);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('PEF','FontSize',fs);
ylabel('GR','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,2)
scatter(PEF,RHOB,mksz1,NPHI,'filled')
grid on
cmin=0.0; cmax=max(NPHI);colorbar; colormap(jet);caxis([cmin cmax])
title('Colored with NPHI','FontSize',fs);
xlabel('PEF','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,3)
scatter(PEF,DT,mksz1,NPHI,'filled')
grid on
cmin=0.0; cmax=max(NPHI);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('PEF','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,4)
scatter(DT,RHOB,mksz1,NPHI,'filled')
grid on
cmin=0.0; cmax=max(NPHI);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('DT','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,5)
scatter(NPHI,RHOB,mksz1,NPHI,'filled')
grid on
cmin=0.0; cmax=max(NPHI);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('NPHI','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,6)
scatter(NPHI,DT,mksz1,NPHI,'filled')
grid on
cmin=0.0; cmax=max(NPHI);colorbar; colormap(jet);caxis([cmin cmax])
xlabel('NPHI','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
%% Probability plots (PDF)
ncount=20;
figure(10)
subplot (2,3,1)
[kern_PEG_GR,mesh_PEF,mesh_GR]=pdf2d(PEF,GR);
contourf(mesh_PEF,mesh_GR,kern_PEG_GR,ncount)
colorbar 
colormap(flipud(hot))
xlabel('PEF','FontSize',fs);
ylabel('GR','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,2)
[kern_PEG_RHOB,mesh_PEF,mesh_RHOB]=pdf2d(PEF,RHOB);
contourf(mesh_PEF,mesh_RHOB,kern_PEG_RHOB,ncount)
colorbar 
colormap(flipud(hot))
title('Density  Plots','FontSize',fs);
xlabel('PEF','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,3)
[kern_PEG_DT,mesh_PEF,mesh_DT]=pdf2d(PEF,DT);
contourf(mesh_PEF,mesh_DT,kern_PEG_DT,ncount)
colorbar 
colormap(flipud(hot))
xlabel('PEF','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,4)
[kern_DT_RHOB,mesh_DT,mesh_RHOB]=pdf2d(DT,RHOB);
contourf(mesh_DT,mesh_RHOB,kern_DT_RHOB,ncount)
colorbar 
colormap(flipud(hot))
xlabel('DT','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,5)
[kern_NPHI_RHOB,mesh_NPHI,mesh_RHOB]=pdf2d(NPHI,RHOB);
contourf(mesh_NPHI,mesh_RHOB,kern_NPHI_RHOB,ncount)
colorbar 
colormap(flipud(hot))
xlabel('NPHI','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,6)
[kern_NPHI_DT,mesh_NPHI,mesh_DT]=pdf2d(NPHI,DT);
contourf(mesh_NPHI,mesh_DT,kern_NPHI_DT,ncount)
colorbar 
colormap(flipud(hot))
xlabel('NPHI','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
%% PDF and dotplots overlaid 
mksz1=2;
figure(11)
subplot (2,3,1)
[kern_PEG_GR,mesh_PEF,mesh_GR]=pdf2d(PEF,GR);
contourf(mesh_PEF,mesh_GR,kern_PEG_GR,ncount)
colorbar 
colormap(flipud(hot))
hold on
plot(PEF,GR,'b.','MarkerSize',mksz1)
xlabel('PEF','FontSize',fs);
ylabel('GR','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,2)
[kern_PEG_RHOB,mesh_PEF,mesh_RHOB]=pdf2d(PEF,RHOB);
contourf(mesh_PEF,mesh_RHOB,kern_PEG_RHOB,ncount)
colorbar 
colormap(flipud(hot))
hold on
plot(PEF,RHOB,'b.','MarkerSize',mksz1)
title('Density  Plots','FontSize',fs);
xlabel('PEF','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,3)
[kern_PEG_DT,mesh_PEF,mesh_DT]=pdf2d(PEF,DT);
contourf(mesh_PEF,mesh_DT,kern_PEG_DT,ncount)
colorbar 
colormap(flipud(hot))
hold on
plot(PEF,DT,'b.','MarkerSize',mksz1)
xlabel('PEF','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)
subplot (2,3,4)
[kern_DT_RHOB,mesh_DT,mesh_RHOB]=pdf2d(DT,RHOB);
contourf(mesh_DT,mesh_RHOB,kern_DT_RHOB,ncount)
colorbar 
colormap(flipud(hot))
hold on
plot(DT,RHOB,'b.','MarkerSize',mksz1)
xlabel('DT','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,5)
[kern_NPHI_RHOB,mesh_NPHI,mesh_RHOB]=pdf2d(NPHI,RHOB);
contourf(mesh_NPHI,mesh_RHOB,kern_NPHI_RHOB,ncount)
colorbar 
colormap(flipud(hot))
hold on
plot(NPHI,RHOB,'b.','MarkerSize',mksz1)
xlabel('NPHI','FontSize',fs);
ylabel('RHOB','FontSize',fs);
grid on 
set(gca,'Ydir','reverse','Fontsize',fs)
subplot (2,3,6)
[kern_NPHI_DT,mesh_NPHI,mesh_DT]=pdf2d(NPHI,DT);
contourf(mesh_NPHI,mesh_DT,kern_NPHI_DT,ncount)
colorbar 
colormap(flipud(hot))
hold on
plot(NPHI,DT,'b.','MarkerSize',mksz1)
xlabel('NPHI','FontSize',fs);
ylabel('DT','FontSize',fs);
grid on 
set(gca,'Fontsize',fs)

%% Outlier detection and removal

% % % By default, an outlier is a value that ....
%%% is more than three scaled median absolute deviations (MAD).
%%% defines outliers as points outside of the percentiles specified in threshold.....
%%% The threshold argument is the lower and upper percentile thresholds, such as [10 90].

data2=wlog;


DEPTH=data2(:,1);
DT_rm=data2(:,2);
RHOB_rm=data2(:,3);
NPHI_rm=data2(:,4);
PEF_rm=data2(:,5);
GR_rm=data2(:,6);
RT_rm=data2(:,7);

%% Data after outliers removal 
figure(111)
subplot(1,6,1)
plot(GR_rm,DEPTH,'.b','LineWidth',lw)
ylim(DEPTHlim);
xlim(GRlim);
xlabel('(API)','FontSize',fs)
ylabel('Depth(m)','FontSize',fs)
title('GR','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)       
subplot(1,6,3)
plot(RHOB_rm,DEPTH,'.b','LineWidth',lw)
ylim(DEPTHlim);
xlim(RHOBlim);
xlabel('(gr/cc)','FontSize',fs)
title('RHOB','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,2)
plot(RT_rm,DEPTH,'.b','LineWidth',lw)
ylim(DEPTHlim);
xlim(RTlim);
xlabel('(Omh-m)','FontSize',fs)
title('RT','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,4)
plot(NPHI_rm,DEPTH,'.b','LineWidth',lw)
ylim(DEPTHlim);
xlim(NPHIlim);
xlabel('(v/v)','FontSize',fs)
title('NPHI','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,5)
plot(DT_rm,DEPTH,'.b','LineWidth',lw)
ylim(DEPTHlim);
xlim(DTlim);
xlabel('(msec/ft)','FontSize',fs)
title('DT','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,6)
plot(PEF_rm,DEPTH,'.b','LineWidth',lw)
ylim(DEPTHlim);
xlim(PEFlim);
xlabel('(b/e)','FontSize',fs)
title('PEF','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
%% Transformation including Standardization (1), normalization(2), and both(3)
mydata=data2(:,2:nc);

data2=dtransform(mydata,execute_mode);

data2=[DEPTH,data2]; %%% add depth to transformed data

DT_sn=data2(:,2);
RHOB_sn=data2(:,3);
NPHI_sn=data2(:,4);
PEF_sn=data2(:,5);
GR_sn=data2(:,6);
RT_sn=data2(:,7);
%% Data after standardization
figure(12)
subplot(1,6,1)
plot(GR_sn,DEPTH,'.b','LineWidth',lw)
xlabel('(API)','FontSize',fs)
ylabel('Depth(m)','FontSize',fs)
title('GR','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)       
subplot(1,6,3)
plot(RHOB_sn,DEPTH,'.b','LineWidth',lw)
xlabel('(gr/cc)','FontSize',fs)
title('RHOB','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,2)
plot(RT_sn,DEPTH,'.b','LineWidth',lw)
xlabel('(Omh-m)','FontSize',fs)
title('RT','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,4)
plot(NPHI_sn,DEPTH,'.b','LineWidth',lw)
xlabel('(v/v)','FontSize',fs)
title('NPHI','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,5)
plot(DT_sn,DEPTH,'.b','LineWidth',lw)
xlabel('(msec/ft)','FontSize',fs)
title('DT','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  
subplot(1,6,6)
plot(PEF_sn,DEPTH,'.b','LineWidth',lw)
xlabel('(b/e)','FontSize',fs)
title('PEF','FontSize',fs)
grid MINOR
grid on
set(gca,'YDir','reverse','FontSize',fs)  

%% Clustering 
%% Do elbow to determine number of clusters


nclust=4; %%% number of clusters for now


%% Kmean
data=data2(:,2:6);
[idx_km,C] = kmeans(data,nclust);

figure(13)
subplot(2,3,1)
for jp=1:nclust
    plot(PEF(idx_km==jp),GR(idx_km==jp),'.','MarkerSize',mksz)
    hold on
end
% % plot(C(:,4),...
% %      C(:,5),...
% %      'kx','MarkerSize',mksz,'LineWidth',lw) 
legend('Cluster 1','Cluster 2','Cluster 3',...
       'Cluster 4')
xlabel('PEF','FontSize',fs)
ylabel('GR','FontSize',fs)
grid
set(gca,'Fontsize',fs)
subplot(2,3,2)
for jp=1:nclust
    plot(PEF(idx_km==jp),RHOB(idx_km==jp),'.','MarkerSize',mksz)
    hold on
end
% % plot(C(:,4),...
% %      C(:,2),...
% %      'kx','MarkerSize',mksz,'LineWidth',lw) 
title('Kmean Clustering','FontSize',fs)
xlabel('PEF','FontSize',fs)
ylabel('RHOB','FontSize',fs)
grid
set(gca,'Ydir','reverse','Fontsize',fs)
subplot(2,3,3)
for jp=1:nclust
    plot(PEF(idx_km==jp),DT(idx_km==jp),'.','MarkerSize',mksz)
    hold on
end
% % plot(C(:,4),...
% %      C(:,1),...
% %      'kx','MarkerSize',mksz,'LineWidth',lw) 
xlabel('PEF','FontSize',fs)
ylabel('DT','FontSize',fs)
grid
set(gca,'Fontsize',fs)
subplot(2,3,4)
for jp=1:nclust
    plot(DT(idx_km==jp),RHOB(idx_km==jp),'.','MarkerSize',mksz)
    hold on
end
% % plot(C(:,1),...
% %      C(:,2),...
% %      'kx','MarkerSize',mksz,'LineWidth',lw) 
xlabel('DT','FontSize',fs)
ylabel('RHOB','FontSize',fs)
grid
set(gca,'Ydir','reverse','Fontsize',fs)
subplot(2,3,5)
for jp=1:nclust
    plot(NPHI(idx_km==jp),RHOB(idx_km==jp),'.','MarkerSize',mksz)
    hold on
end
% % plot(C(:,3),...
% %      C(:,2),...
% %      'kx','MarkerSize',mksz,'LineWidth',lw) 
xlabel('NPHI','FontSize',fs)
ylabel('RHOB','FontSize',fs)
grid
set(gca,'Ydir','reverse','Fontsize',fs)
subplot(2,3,6)
for jp=1:nclust
    plot(NPHI(idx_km==jp),DT(idx_km==jp),'.','MarkerSize',mksz)
    hold on
end
% % plot(C(:,3),...
% %      C(:,1),...
% %      'kx','MarkerSize',mksz,'LineWidth',lw) 
xlabel('NPHI','FontSize',fs)
ylabel('DT','FontSize',fs)
grid
set(gca,'Fontsize',fs)

%% Spectral clusteriong 
idx_spec=spectralcluster(data,nclust);
figure(14)
subplot(2,3,1)
for jp=1:nclust
    plot(PEF(idx_spec==jp),GR(idx_spec==jp),'.','MarkerSize',mksz)
    hold on
end
legend('Cluster 1','Cluster 2','Cluster 3',...
        'Cluster 4')
xlabel('PEF','FontSize',fs)
ylabel('GR','FontSize',fs)
grid
set(gca,'Fontsize',fs)
subplot(2,3,2)
for jp=1:nclust
    plot(PEF(idx_spec==jp),RHOB(idx_spec==jp),'.','MarkerSize',mksz)
    hold on
end
title('Spectral Clustering','FontSize',fs)
xlabel('PEF','FontSize',fs)
ylabel('RHOB','FontSize',fs)
grid
set(gca,'Ydir','reverse','Fontsize',fs)
subplot(2,3,3)
for jp=1:nclust
    plot(PEF(idx_spec==jp),DT(idx_spec==jp),'.','MarkerSize',mksz)
    hold on
end
xlabel('PEF','FontSize',fs)
ylabel('DT','FontSize',fs)
grid
set(gca,'Fontsize',fs)
subplot(2,3,4)
for jp=1:nclust
    plot(DT(idx_spec==jp),RHOB(idx_spec==jp),'.','MarkerSize',mksz)
    hold on
end
xlabel('DT','FontSize',fs)
ylabel('RHOB','FontSize',fs)
grid
set(gca,'Ydir','reverse','Fontsize',fs)
subplot(2,3,5)
for jp=1:nclust
    plot(NPHI(idx_spec==jp),RHOB(idx_spec==jp),'.','MarkerSize',mksz)
    hold on
end
xlabel('NPHI','FontSize',fs)
ylabel('RHOB','FontSize',fs)
grid
set(gca,'Ydir','reverse','Fontsize',fs)
subplot(2,3,6)
for jp=1:nclust
    plot(NPHI(idx_spec==jp),DT(idx_spec==jp),'.','MarkerSize',mksz)
    hold on
end
xlabel('NPHI','FontSize',fs)
ylabel('DT','FontSize',fs)
grid
set(gca,'Fontsize',fs)

%% GMM Clustering 
%%%Fit a 4-component Gaussian mixture model (GMM). Because there are 4 components, ...
%%%suppose that any data point with cluster membership posterior probabilities (PPD)...
%%% in the interval [0.4,0.6] can be a member of both clusters.
gm = fitgmdist(data,nclust);
threshold = [0.4 0.6];

%%%%%Estimate component-member posterior probabilities for all...
%%%%data points using the fitted GMM gm. These represent cluster membership scores.

ppd= posterior(gm,data);

%%%%%Plot the data and assign clusters by maximum posterior probability....
%%%% Identify points that could be in either cluster.

idx_gm = cluster(gm,data);
idxBoth = find(ppd(:,1)>=threshold(1) & ppd(:,1)<=threshold(2)); 
numInBoth = numel(idxBoth);

%% GMM Plots
figure(15)
subplot(2,3,1)
for jp=1:nclust
    plot(PEF(idx_gm==jp),GR(idx_gm==jp),'.','MarkerSize',mksz)
    hold on
end
legend('Cluster 1','Cluster 2','Cluster 3',...
        'Cluster 4')
xlabel('PEF','FontSize',fs)
ylabel('GR','FontSize',fs)
grid
set(gca,'Fontsize',fs)
subplot(2,3,2)
for jp=1:nclust
    plot(PEF(idx_gm==jp),RHOB(idx_gm==jp),'.','MarkerSize',mksz)
    hold on
end
title('GMM Clustering with Full Unshared Covariances','FontSize',fs)
xlabel('PEF','FontSize',fs)
ylabel('RHOB','FontSize',fs)
grid
set(gca,'Ydir','reverse','Fontsize',fs)
subplot(2,3,3)
for jp=1:nclust
    plot(PEF(idx_gm==jp),DT(idx_gm==jp),'.','MarkerSize',mksz)
    hold on
end
xlabel('PEF','FontSize',fs)
ylabel('DT','FontSize',fs)
grid
set(gca,'Fontsize',fs)
subplot(2,3,4)
for jp=1:nclust
    plot(DT(idx_gm==jp),RHOB(idx_gm==jp),'.','MarkerSize',mksz)
    hold on
end
xlabel('DT','FontSize',fs)
ylabel('RHOB','FontSize',fs)
grid
set(gca,'Ydir','reverse','Fontsize',fs)
subplot(2,3,5)
for jp=1:nclust
    plot(NPHI(idx_gm==jp),RHOB(idx_gm==jp),'.','MarkerSize',mksz)
    hold on
end
xlabel('NPHI','FontSize',fs)
ylabel('RHOB','FontSize',fs)
grid
set(gca,'Ydir','reverse','Fontsize',fs)
subplot(2,3,6)
for jp=1:nclust
    plot(NPHI(idx_gm==jp),DT(idx_gm==jp),'.','MarkerSize',mksz)
    hold on
end
xlabel('NPHI','FontSize',fs)
ylabel('DT','FontSize',fs)
grid
set(gca,'Fontsize',fs)

%% GMM with shared covarinaces 
%%%%Soft clustering using a GMM is similar to fuzzy k-means clustering, ...
%%%%which also assigns each point to each cluster with a membership score...
%%%%The fuzzy k-means algorithm assumes that clusters are roughly spherical in shape,....
%%%% and all of roughly equal size. This is comparable to a Gaussian mixture distribution ...
%%%with a single covariance matrix that is shared across all components, ....
%%%%and is a multiple of the identity matrix. In contrast, gmdistribution ...
%%%%allows you to specify different covariance structures....
%%%The default is to estimate a separate, unconstrained covariance matrix for each component. ....
%%%%A more restricted option, closer to k-means, is to estimate a shared, ...
%%% diagonal covariance matrix.


%%% Fit a GMM to the data, but specify that the components share the same,...
%%%diagonal covariance matrix. This specification is similar to ....
%%%implementing fuzzy k-means clustering, but provides more flexibility by ....
%%% allowing unequal variances for different variables.

gmSharedDiag = fitgmdist(data,nclust,'CovType','Diagonal','SharedCovariance',true');

%%%%Estimate component-member posterior probabilities for all data points...
%%%using the fitted GMM gmSharedDiag. Estimate soft cluster assignments.

[idx_gmm_share,~,PSharedDiag] = cluster(gmSharedDiag,data);
idxBothSharedDiag  = find(PSharedDiag(:,1)>=threshold(1) & ...
    PSharedDiag(:,1)<=threshold(2)); 
numInBoth = numel(idx_gmm_share);
%%%%Plot the data and identify the hard, clustering assignments...
%%%from the GMM analysis assuming the shared, diagonal covariances ...
%%% among components. Also, identify those data points that could be in either cluster.

%% PLotting GMM with shared convariances 
figure(16)
subplot(2,3,1)
for jp=1:nclust
    plot(PEF(idx_gmm_share==jp),GR(idx_gmm_share==jp),'.','MarkerSize',mksz)
    hold on
end
legend('Cluster 1','Cluster 2','Cluster 3',...
        'Cluster 4')
xlabel('PEF','FontSize',fs)
ylabel('GR','FontSize',fs)
grid
set(gca,'Fontsize',fs)
subplot(2,3,2)
for jp=1:nclust
    plot(PEF(idx_gmm_share==jp),RHOB(idx_gmm_share==jp),'.','MarkerSize',mksz)
    hold on
end
title('GMM Clustering with Shared Diagonal Component Covariances','FontSize',fs)
xlabel('PEF','FontSize',fs)
ylabel('RHOB','FontSize',fs)
grid
set(gca,'Ydir','reverse','Fontsize',fs)
subplot(2,3,3)
for jp=1:nclust
    plot(PEF(idx_gmm_share==jp),DT(idx_gmm_share==jp),'.','MarkerSize',mksz)
    hold on
end
xlabel('PEF','FontSize',fs)
ylabel('DT','FontSize',fs)
grid
set(gca,'Fontsize',fs)
subplot(2,3,4)
for jp=1:nclust
    plot(DT(idx_gmm_share==jp),RHOB(idx_gmm_share==jp),'.','MarkerSize',mksz)
    hold on
end
xlabel('DT','FontSize',fs)
ylabel('RHOB','FontSize',fs)
grid
set(gca,'Ydir','reverse','Fontsize',fs)
subplot(2,3,5)
for jp=1:nclust
    plot(NPHI(idx_gmm_share==jp),RHOB(idx_gmm_share==jp),'.','MarkerSize',mksz)
    hold on
end
xlabel('NPHI','FontSize',fs)
ylabel('RHOB','FontSize',fs)
grid
set(gca,'Ydir','reverse','Fontsize',fs)
subplot(2,3,6)
for jp=1:nclust
    plot(NPHI(idx_gmm_share==jp),DT(idx_gmm_share==jp),'.','MarkerSize',mksz)
    hold on
end
xlabel('NPHI','FontSize',fs)
ylabel('DT','FontSize',fs)
grid
set(gca,'Fontsize',fs)


%% C Fuzzy Mean Custering 


%% DBSCAN
%Select a value for minpts.
% To select a value for minpts, consider a value greater than or equal to...
% one plus the number of dimensions of the input data. ...
%For example, for an n-by-p matrix X, set the value of 'minpts' greater than or equal to p+1.
minpts = 1000; % Minimum number of neighbors for a core point

%Select a value for epsilon.
%One strategy for estimating a value for epsilon is to generate a k-distance graph for the input data X. For each point in X, find the distance to the kth nearest point, and plot sorted points against this distance. The graph contains a knee. The distance that corresponds to the knee is generally a good choice for epsilon, because it is the region where points start tailing off into outlier (noise) territory [1].
%Before plotting the k-distance graph, first find the minpts smallest pairwise distances for observations in X, in ascending order.
%kD = pdist2(X,X,'euc','Smallest',minpts); % The minpts smallest pairwise distances
%Plot the k-distance graph.
% plot(sort(kD(end,:)));
% title('k-distance graph')
% xlabel('Points sorted with 50th nearest distances')
% ylabel('50th nearest distances')
% grid
% The knee appears to be around 2; therefore, set the value of epsilon to xxxx.

kD = pdist2(data,data,'euc','Smallest',minpts); % The minpts smallest pairwise distances
figure(17)
plot(sort(kD(end,:)));
title('k-distance graph')
xlabel('Points sorted with 50th nearest distances')
ylabel('50th nearest distances')
grid on
set(gca,'Fontsize',fs)

epsilon=6000; %%% determine from figure 17


idx_db=dbscan(data,epsilon,minpts);
figure(18)
% % gscatter(PEF,GR,idx_db);
% % xlabel('PEF','FontSize',fs);
% % ylabel('GR','FontSize',fs);
% % grid on
% % set(gca,'Fontsize',fs)
subplot(2,3,1)
for jp=1:nclust
    plot(PEF(idx_db==jp),GR(idx_db==jp),'.','MarkerSize',mksz)
    hold on
end
legend('Cluster 1','Cluster 2','Cluster 3',...
        'Cluster 4')
xlabel('PEF','FontSize',fs)
ylabel('GR','FontSize',fs)
grid
set(gca,'Fontsize',fs)

%% SOM
% % dimension1 = 10;% Create a Self-Organizing Map
% % dimension2 = 10;
% % net = selforgmap([dimension1 dimension2]);
% % [net,tr_data] = train(net,data);% Train the Network
% % % % net= configure(net,data);
% % data_net= net(data);% Test the Network
% % idx_smo= vec2ind(data_net);
% % % View the Network
% view(net)

% % Plots
% % Uncomment these lines to enable various plots.
% %figure, plotsomtop(net)
% %figure, plotsomnc(net)
% %figure, plotsomnd(net)
% %figure, plotsomplanes(net)
% %figure, plotsomhits(net,x)
% %figure, plotsompos(net,x)



